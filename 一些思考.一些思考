服务器输入：
玩家的加入
玩家的退出
玩家的移动
玩家的吐孢子
玩家的分裂


服务器输出：
新的玩家以及这个玩家的Node信息
新的孢子id,孢子的目标位置,孢子所属的玩家
玩家新生成的球的信息
新生成的食物
新生成的刺球
移除的食物
移除的刺球
移除的孢子
移除的玩家球列表

服务器转发：
玩家的退出操作
玩家的移动操作


客户端输入：
一开始所有的场景信息（新的玩家以及节点,食物,刺球,孢子）
玩家的操作
设置此关键帧开始时的对象idx

客户端输出:
新的玩家以及玩家的球列表信息
被吃的食物，刺球，孢子信息
被吃的玩家球列表信息

/*下一个阶段才需要这些接口,当所有的调试完成后才由客户端自己生成这些信息**/
新的食物
新的刺球
新的孢子

思考几个问题：
1：在第100帧时收到玩家A第90帧的数据,如果玩家A在这10帧内有些球被移除了,那么在第100帧去计算玩家A剩下球的最终位置还是需要为那些已经删除了的球创建一个虚拟的球去参与碰撞。那些球的数据来自于第90帧的玩家A的球数据
2：当为玩家模拟时，服务器在第100帧为玩家生成了新的球，但是只收到了玩家第90帧的数据，这些新的球如何去移动位置?当知道玩家A已经收到第100帧数据时,这时才知道新的球的位置,这些球这个时候才去模拟
3：吐孢子如何同步？服务器直接告诉目的地位置
4：分裂球如何同步？服务器在第100帧时收到客户端发送的分裂操作，然后立即生成新的球，但是客户端在第110帧才收到服务器确认分裂,客户端此时告诉服务器我才收到100帧数据,然后服务器向客户端这个位置去运行。。


啊啊啊啊啊啊啊！！！！太麻烦了。。操蛋。

算了还是直接一点吧：如果玩家在收到服务器的一个帧数据时，如果玩家的球有数量变更时，需要主动告诉服务器我的球位置，然后服务器去向目标点移动.

